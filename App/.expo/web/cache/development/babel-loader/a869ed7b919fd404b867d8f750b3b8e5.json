{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\OvarianCancerApp\\\\App\\\\node_modules\\\\react-native-settings-page\\\\src\\\\Components\\\\SwitchRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport SettingsRowStyle from \"../Styles/SettingsRowStyle\";\nvar containerInSection = SettingsRowStyle.containerInSection,\n    containerInnerSection = SettingsRowStyle.containerInnerSection,\n    iconLeft = SettingsRowStyle.iconLeft,\n    text = SettingsRowStyle.text,\n    switchSt = SettingsRowStyle.switchSt;\n\nvar SwitchRow = function (_Component) {\n  _inherits(SwitchRow, _Component);\n\n  var _super = _createSuper(SwitchRow);\n\n  function SwitchRow() {\n    _classCallCheck(this, SwitchRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SwitchRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this.props.onPressCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: containerInSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: containerInnerSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: this.props.iconName,\n        size: 24,\n        style: iconLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: text,\n        numberOfLines: 1,\n        ellipsizeMode: 'tail',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, this.props.text), React.createElement(Switch, {\n        style: switchSt,\n        disabled: this.props._disabled,\n        onValueChange: this.props._onValueChange,\n        value: this.props._value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return SwitchRow;\n}(Component);\n\nexport { SwitchRow };","map":{"version":3,"sources":["C:/Users/Michael/Documents/OvarianCancerApp/App/node_modules/react-native-settings-page/src/Components/SwitchRow.js"],"names":["React","Component","Icon","SettingsRowStyle","containerInSection","containerInnerSection","iconLeft","text","switchSt","SwitchRow","props","onPressCallback","iconName","_disabled","_onValueChange","_value"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,gBAAP;IAIIC,kB,GAKAD,gB,CALAC,kB;IACAC,qB,GAIAF,gB,CAJAE,qB;IACAC,Q,GAGAH,gB,CAHAG,Q;IACAC,I,GAEAJ,gB,CAFAI,I;IACAC,Q,GACAL,gB,CADAK,Q;;IAIEC,S;;;;;;;;;;;;;6BACO;AACL,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWE,QAAvB;AAAiC,QAAA,IAAI,EAAE,EAAvC;AAA2C,QAAA,KAAK,EAAEN,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,IAAb;AAAmB,QAAA,aAAa,EAAE,CAAlC;AAAqC,QAAA,aAAa,EAAE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAWH,IADhB,CAFJ,EAKI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAEC,QADX;AAEI,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWG,SAFzB;AAGI,QAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI,cAH9B;AAII,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADJ,CADJ;AAiBH;;;;EAnBmBd,S;;AAuBxB,SAASQ,SAAT","sourcesContent":["// Dependencies import\r\nimport React, { Component } from 'react'\r\nimport { View, Text, TouchableOpacity, Switch } from 'react-native'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport SettingsRowStyle from '../Styles/SettingsRowStyle'\r\n\r\n// Styles deconstructing\r\nconst {\r\n    containerInSection,\r\n    containerInnerSection,\r\n    iconLeft,\r\n    text,\r\n    switchSt\r\n} = SettingsRowStyle\r\n\r\n// Class for switch rows\r\nclass SwitchRow extends Component {\r\n    render() {\r\n        return (\r\n            <TouchableOpacity onPress={this.props.onPressCallback}>\r\n                <View style={containerInSection}>\r\n                    <View style={containerInnerSection}>\r\n                        <Icon name={this.props.iconName} size={24} style={iconLeft} />\r\n                        <Text style={text} numberOfLines={1} ellipsizeMode={'tail'}>\r\n                            {this.props.text}\r\n                        </Text>\r\n                        <Switch\r\n                            style={switchSt}\r\n                            disabled={this.props._disabled}\r\n                            onValueChange={this.props._onValueChange}\r\n                            value={this.props._value} />\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\n// Component export\r\nexport { SwitchRow }"]},"metadata":{},"sourceType":"module"}