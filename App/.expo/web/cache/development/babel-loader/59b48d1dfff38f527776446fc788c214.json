{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\OvarianCancerApp\\\\App\\\\node_modules\\\\react-native-settings-page\\\\src\\\\Components\\\\SliderRow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Slider } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport SettingsRowStyle from \"../Styles/SettingsRowStyle\";\nvar containerInSection = SettingsRowStyle.containerInSection,\n    containerInnerSection = SettingsRowStyle.containerInnerSection,\n    sliderSt = SettingsRowStyle.sliderSt,\n    iconLeft = SettingsRowStyle.iconLeft,\n    iconRight = SettingsRowStyle.iconRight,\n    text = SettingsRowStyle.text;\n\nvar SliderRow = function (_Component) {\n  _inherits(SliderRow, _Component);\n\n  var _super = _createSuper(SliderRow);\n\n  function SliderRow() {\n    _classCallCheck(this, SliderRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SliderRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this.props.onPressCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: containerInSection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: containerInnerSection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: this.props.iconName,\n        size: 24,\n        style: iconLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: text,\n        numberOfLines: 1,\n        ellipsizeMode: 'tail',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, this.props.text), this.props.navigate ? React.createElement(Icon, {\n        name: 'angle-right',\n        size: 24,\n        style: iconRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 35\n        }\n      }) : null)), React.createElement(Slider, {\n        style: sliderSt,\n        thumbTintColor: this.props._color,\n        maximumValue: this.props._max,\n        minimumValue: this.props._min,\n        value: this.props._value,\n        onValueChange: this.props._onValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SliderRow;\n}(Component);\n\nexport { SliderRow };","map":{"version":3,"sources":["C:/Users/Michael/Documents/OvarianCancerApp/App/node_modules/react-native-settings-page/src/Components/SliderRow.js"],"names":["React","Component","Slider","Icon","SettingsRowStyle","containerInSection","containerInnerSection","sliderSt","iconLeft","iconRight","text","SliderRow","props","onPressCallback","iconName","navigate","_color","_max","_min","_value","_onValueChange"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,IAAP;AACA,OAAOC,gBAAP;IAIIC,kB,GAMAD,gB,CANAC,kB;IACAC,qB,GAKAF,gB,CALAE,qB;IACAC,Q,GAIAH,gB,CAJAG,Q;IACAC,Q,GAGAJ,gB,CAHAI,Q;IACAC,S,GAEAL,gB,CAFAK,S;IACAC,I,GACAN,gB,CADAM,I;;IAIEC,S;;;;;;;;;;;;;6BACO;AACL,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKM,KAAL,CAAWE,QAAvB;AAAiC,QAAA,IAAI,EAAE,EAAvC;AAA2C,QAAA,KAAK,EAAEN,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,IAAb;AAAmB,QAAA,aAAa,EAAE,CAAlC;AAAqC,QAAA,aAAa,EAAE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWF,IADhB,CAFJ,EAMQ,KAAKE,KAAL,CAAWG,QAAX,GACM,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,aAAZ;AAA2B,QAAA,IAAI,EAAE,EAAjC;AAAqC,QAAA,KAAK,EAAEN,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,GAEM,IARd,CADJ,CADJ,EAcI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAEF,QADX;AAEI,QAAA,cAAc,EAAE,KAAKK,KAAL,CAAWI,MAF/B;AAGI,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWK,IAH7B;AAII,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,IAJ7B;AAKI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,MALtB;AAMI,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWQ,cAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAwBH;;;;EA1BmBnB,S;;AA8BxB,SAASU,SAAT","sourcesContent":["// Dependencies import\r\nimport React, { Component } from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native'\r\nimport { Slider } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport SettingsRowStyle from '../Styles/SettingsRowStyle'\r\n\r\n// Styles deconstructing\r\nconst {\r\n    containerInSection,\r\n    containerInnerSection,\r\n    sliderSt,\r\n    iconLeft,\r\n    iconRight,\r\n    text\r\n} = SettingsRowStyle\r\n\r\n// Class for slider rows\r\nclass SliderRow extends Component {\r\n    render() {\r\n        return (\r\n            <TouchableOpacity onPress={this.props.onPressCallback}>\r\n                <View style={containerInSection}>\r\n                    <View style={containerInnerSection}>\r\n                        <Icon name={this.props.iconName} size={24} style={iconLeft} />\r\n                        <Text style={text} numberOfLines={1} ellipsizeMode={'tail'}>\r\n                            {this.props.text}\r\n                        </Text> \r\n                        {\r\n                            this.props.navigate\r\n                                ? <Icon name={'angle-right'} size={24} style={iconRight} />\r\n                                : null\r\n                        }                   \r\n                    </View>\r\n                </View>\r\n                <Slider \r\n                    style={sliderSt} \r\n                    thumbTintColor={this.props._color}\r\n                    maximumValue={this.props._max}\r\n                    minimumValue={this.props._min}\r\n                    value={this.props._value} \r\n                    onValueChange={this.props._onValueChange} />\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\n// Component export\r\nexport { SliderRow }"]},"metadata":{},"sourceType":"module"}